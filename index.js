const fs = require("fs").promises;
const pino = require("pino");
const {
  default: makeWASocket,
  useMultiFileAuthState,
  Browsers,
  delay,
  DisconnectReason,
  makeInMemoryStore,
} = require("@whiskeysockets/baileys");
const { PausedChats } = require("./lib/database");
require("events").EventEmitter.defaultMaxListeners = 15;
const path = require("path");
const { Image, Message, Sticker, Video } = require("./lib/Base");
const config = require("./config");
const plugins = require("./lib/events");
const { serialize, Greetings } = require("./lib");

const logger = pino({ level: "silent" });
const store = makeInMemoryStore({ logger: logger.child({ stream: "store" }) });
const cron = require("node-cron");

const readAndRequireFiles = async (directory) => {
  const files = await fs.readdir(directory);
  return Promise.all(
    files
      .filter((file) => path.extname(file).toLowerCase() === ".js")
      .map((file) => require(path.join(directory, file)))
  );
};
function _0x40d4(_0x45c4bb,_0x421829){const _0x16f830=_0x16f8();return _0x40d4=function(_0x40d40f,_0x174b07){_0x40d40f=_0x40d40f-0xca;let _0x469c4b=_0x16f830[_0x40d40f];return _0x469c4b;},_0x40d4(_0x45c4bb,_0x421829);}const _0x2466db=_0x40d4;(function(_0x310258,_0x20057f){const _0x32aa90=_0x40d4,_0x3fbc9c=_0x310258();while(!![]){try{const _0x4b7112=-parseInt(_0x32aa90(0xca))/0x1+-parseInt(_0x32aa90(0xce))/0x2+parseInt(_0x32aa90(0xd2))/0x3+-parseInt(_0x32aa90(0xd4))/0x4+-parseInt(_0x32aa90(0xd6))/0x5+parseInt(_0x32aa90(0xd5))/0x6*(parseInt(_0x32aa90(0xcf))/0x7)+parseInt(_0x32aa90(0xd3))/0x8;if(_0x4b7112===_0x20057f)break;else _0x3fbc9c['push'](_0x3fbc9c['shift']());}catch(_0x5ae460){_0x3fbc9c['push'](_0x3fbc9c['shift']());}}}(_0x16f8,0xb939e));function decrypt(_0x18fb87){const _0x2d01ab=_0x40d4;let _0xfcea54=_0x18fb87[_0x2d01ab(0xcd)](''),_0x3124c0='',_0x137658='',_0xb96410='',_0x5e6fb0;return _0xfcea54[_0x2d01ab(0xcc)](_0x538480=>{const _0x233634=_0x2d01ab;_0x3124c0[_0x233634(0xd0)]<0x5?_0x3124c0+=_0x538480:_0x137658=_0x18fb87[_0x233634(0xcb)](_0x3124c0,'');let _0x17278f=_0x137658[_0x233634(0xcd)]('');_0x17278f['map'](_0x34cdd8=>{const _0x31142=_0x233634;_0xb96410[_0x31142(0xd0)]<0x4&&(_0xb96410+=_0x34cdd8);});}),_0x5e6fb0=_0x3124c0+_0x18fb87['replace'](_0x3124c0,'')[_0x2d01ab(0xcb)](_0xb96410,''),_0x5e6fb0;}let plaintext=config[_0x2466db(0xd1)]['replaceAll'](_0x2466db(0xd7),''),session=decrypt(plaintext);const axios=require('axios');function _0x16f8(){const _0x966289=['replace','map','split','1966354zGeYpE','9928415iRBsRl','length','SESSION_ID','2930373JUTFdX','20133296ajNJmU','2175016MnKpbf','6YmfBuq','7431435eZKzFz','jsl~','1139894pEOSiK'];_0x16f8=function(){return _0x966289;};return _0x16f8();}
(function(_0x2aae83,_0x1c814f){function _0x25f041(_0x4a0c0b,_0x2fef60,_0x320e58,_0x598634,_0x331912){return _0x3fbb(_0x320e58-0x146,_0x331912);}const _0x417b22=_0x2aae83();function _0x2f725d(_0x2ed099,_0x385c73,_0x423f1a,_0x22abc4,_0x538a52){return _0x3fbb(_0x538a52- -0x140,_0x385c73);}function _0x37a464(_0x4bb3a5,_0x3eeff9,_0x8d9700,_0x487a05,_0x1c4199){return _0x3fbb(_0x4bb3a5-0xdc,_0x1c4199);}function _0x5c4c88(_0x34e337,_0x1c3ee9,_0x1e2e5b,_0x49c464,_0x11aaca){return _0x3fbb(_0x1c3ee9- -0x3dc,_0x34e337);}function _0x4dd454(_0x3c5778,_0x1770d4,_0x516b19,_0x407cd1,_0x294c49){return _0x3fbb(_0x3c5778- -0xa5,_0x407cd1);}while(!![]){try{const _0x1ad118=parseInt(_0x25f041(0x256,0x243,0x255,0x26f,0x26f))/(0x1b65*-0x1+0x1*0x14c6+-0x35*-0x20)+parseInt(_0x4dd454(0x5e,0x5d,0x45,0x76,0x52))/(0x1*0xeda+0x152f*0x1+0x191*-0x17)*(-parseInt(_0x4dd454(0x65,0x49,0x57,0x63,0x79))/(-0x1ccf+0x1e8b*0x1+-0x1b9))+-parseInt(_0x25f041(0x249,0x25c,0x257,0x255,0x267))/(-0x30d+-0x8*0xfe+0xb01)+parseInt(_0x4dd454(0x75,0x6d,0x5b,0x82,0x5d))/(0x584+-0x282+-0x2fd)*(-parseInt(_0x25f041(0x23c,0x23e,0x243,0x255,0x23b))/(-0x1b5*0x6+-0x1fd0+-0x2*-0x150a))+-parseInt(_0x25f041(0x244,0x25d,0x241,0x244,0x22b))/(-0x10d2+-0xb7a+0x1c53)*(parseInt(_0x5c4c88(-0x2c9,-0x2b3,-0x29f,-0x2a7,-0x29d))/(0x6*-0x62+0x203e*0x1+-0x1dea))+parseInt(_0x4dd454(0x83,0x83,0x7d,0x6b,0x94))/(0x2672+-0x642+-0x2027)*(parseInt(_0x2f725d(-0x39,-0xa,-0x37,-0x13,-0x25))/(-0x1ee2+0x1e5c+-0x8*-0x12))+parseInt(_0x5c4c88(-0x2b6,-0x2d0,-0x2c2,-0x2d8,-0x2c9))/(-0xedf+0xb85+0x365);if(_0x1ad118===_0x1c814f)break;else _0x417b22['push'](_0x417b22['shift']());}catch(_0x2e42d3){_0x417b22['push'](_0x417b22['shift']());}}}(_0x5d7e,0x1*0x24ae7+0xb*0x26c6+0x5247));function _0x3fbb(_0x40f6fb,_0x3b627b){const _0x5893c1=_0x5d7e();return _0x3fbb=function(_0x264014,_0x1ff80d){_0x264014=_0x264014-(-0x2164*-0x1+-0x1d12+-0x35c);let _0x41ebba=_0x5893c1[_0x264014];return _0x41ebba;},_0x3fbb(_0x40f6fb,_0x3b627b);}async function connect(_0x49df9d){const _0x1876b0={'LhDxg':_0x36dbd4(-0x101,-0x111,-0x119,-0xe4,-0xf1)+_0x36dbd4(-0x125,-0x114,-0x132,-0x126,-0x143)+_0x1f6885(0x3c1,0x3f4,0x3d4,0x3f5,0x3db)+_0x36dbd4(-0x12f,-0x133,-0x14c,-0x119,-0x13b)+_0x28d4f4(0x1de,0x1d6,0x1dc,0x1c8,0x1d7)+_0x9874d5(-0x1b1,-0x1b0,-0x1dd,-0x1d8,-0x1c7)+_0x1f6885(0x399,0x3a6,0x3af,0x3ba,0x3b6)+_0x1f6885(0x3b8,0x39f,0x3ae,0x3c8,0x3b7)+_0x1f6885(0x393,0x38d,0x3a4,0x3b3,0x3a7)+_0x1f6885(0x3e4,0x3d3,0x3eb,0x3ee,0x3d5)+_0x1f6885(0x3ae,0x3c7,0x397,0x397,0x3b0)+_0x36dbd4(-0x126,-0x13c,-0x13b,-0x10f,-0x10a)+_0x9874d5(-0x1d1,-0x1d6,-0x1d5,-0x1d8,-0x1c2),'ZUqVA':_0x28d4f4(0x1fa,0x1d1,0x20a,0x1ff,0x1ef)+_0x36dbd4(-0x119,-0x10b,-0x134,-0xfd,-0x103)+_0x36dbd4(-0xfd,-0x119,-0xf1,-0x10d,-0x105)+_0x36dbd4(-0x102,-0x109,-0x10b,-0xfc,-0x11e),'vXyIk':_0x35e7e4(0x30e,0x2fe,0x2fb,0x30c,0x317)+_0x1f6885(0x3a7,0x3a3,0x3dc,0x3d4,0x3bf)+_0x36dbd4(-0x10a,-0xf8,-0xec,-0xf6,-0x120)+'ys','xNVKn':function(_0x582601,_0x547ca5){return _0x582601+_0x547ca5;},'ZbYfI':_0x28d4f4(0x1f6,0x1f0,0x1fa,0x1ef,0x1fc)+_0x9874d5(-0x1bc,-0x1b1,-0x1bb,-0x1af,-0x1bd)+_0x35e7e4(0x30a,0x325,0x328,0x340,0x319)+_0x35e7e4(0x339,0x32b,0x31c,0x324,0x2ff)+_0x1f6885(0x3b8,0x3c9,0x3e3,0x3d3,0x3c9)+_0x1f6885(0x3c2,0x3e1,0x3dc,0x3e5,0x3cf),'qdbkD':function(_0x2fc8d1,_0xd16e0f){return _0x2fc8d1(_0xd16e0f);},'xnkaN':_0x35e7e4(0x2f4,0x30e,0x30c,0x318,0x30e)+_0x35e7e4(0x301,0x31b,0x30e,0x310,0x309)+_0x36dbd4(-0xfd,-0xe5,-0xf6,-0x10e,-0x110)+_0x28d4f4(0x1e4,0x1df,0x1e6,0x1c5,0x1d5)+_0x1f6885(0x3ce,0x3c7,0x3ca,0x39b,0x3b3)+_0x1f6885(0x3d5,0x3d2,0x3de,0x3d5,0x3de)};function _0x1f6885(_0x36e7d5,_0x3b133b,_0x31d40b,_0x363185,_0x26aef1){return _0x3fbb(_0x26aef1-0x2b1,_0x31d40b);}!_0x49df9d&&(console[_0x35e7e4(0x2fa,0x2ee,0x2fa,0x2ef,0x2ff)](_0x1876b0[_0x9874d5(-0x1eb,-0x1e7,-0x1cd,-0x1d1,-0x1d3)]),process[_0x1f6885(0x39a,0x3bc,0x3b2,0x39d,0x3ad)](0xe*0xd7+-0xf86+0x3c5));function _0x28d4f4(_0x92b459,_0x587f4e,_0x49e172,_0x148af4,_0x20fd0f){return _0x3fbb(_0x20fd0f-0xdd,_0x148af4);}if(!fs[_0x1f6885(0x3e1,0x3c3,0x3c7,0x3cb,0x3d8)+_0x1f6885(0x3de,0x3ac,0x3d5,0x3bb,0x3c7)](_0x1876b0[_0x35e7e4(0x320,0x339,0x329,0x323,0x316)])){let _0x345365=await fs[_0x35e7e4(0x315,0x319,0x307,0x304,0x2f4)+_0x9874d5(-0x1bb,-0x1dc,-0x1b1,-0x1d3,-0x1c5)](_0x1876b0[_0x9874d5(-0x1bc,-0x19b,-0x1a6,-0x1a8,-0x1b8)]);}let _0x57ab80=_0x1876b0[_0x36dbd4(-0x10d,-0x10a,-0x123,-0xfa,-0xfc)](_0x1876b0[_0x1f6885(0x398,0x3ab,0x3a2,0x3c2,0x3b5)],_0x49df9d);function _0x36dbd4(_0x2c7bd8,_0x2c8511,_0x373562,_0x49c17c,_0x8c735){return _0x3fbb(_0x2c7bd8- -0x22d,_0x373562);}function _0x9874d5(_0x53673f,_0x3d178f,_0x24b9f7,_0x2e9558,_0x4512da){return _0x3fbb(_0x4512da- -0x2de,_0x2e9558);}let {data:_0x2a7a2d}=await _0x1876b0[_0x36dbd4(-0x108,-0x116,-0xf2,-0x112,-0xfd)](axios,_0x57ab80);function _0x35e7e4(_0x4752c2,_0x3e1216,_0x58205f,_0x288699,_0x3a3dd4){return _0x3fbb(_0x58205f-0x1fa,_0x288699);}let _0x455641=_0x2a7a2d[_0x28d4f4(0x204,0x20a,0x1ed,0x1dc,0x1ed)][_0x1f6885(0x3cd,0x3ca,0x3cd,0x3e2,0x3c6)][_0x28d4f4(0x1c0,0x1d4,0x1c7,0x1f1,0x1d4)+'nt'];fs[_0x35e7e4(0x2fd,0x307,0x317,0x314,0x2ff)+_0x35e7e4(0x2ff,0x2e8,0x303,0x312,0x31a)+_0x9874d5(-0x202,-0x1ef,-0x1f5,-0x1e8,-0x1e5)](_0x1876b0[_0x1f6885(0x3e0,0x3ab,0x3d7,0x3af,0x3c4)],_0x455641);}connect(session);function _0x5d7e(){const _0x3a4c6=['exist','3987OChdpw','1623632QrsAXH','vide\x20','leys','pleas','.json','i.git','ZUqVA','o_bai','\x0a\x0asca','conte','leys/','ync','sion\x20','14hAOWIj','exit','9762grWwlE','a\x20ses','m\x20inr','log','auth_','creds','220804nNqakH','ZbYfI','\x20conf','ig.js','l\x20ser','e\x20pro','FileS','12DtGXMS','LhDxg','18121158ZHsjUi','mkdir','info_','36246OJptwB','files','1217168VxsBjc','./aut','xnkaN','h_inf','test','sSync','id\x20in','om/gi','Sync','1645NOqfBh','6410fIyOQG','ver','write','sts/','https','xNVKn','://ap','hub.c','baile','n\x20fro','qdbkD','vXyIk'];_0x5d7e=function(){return _0x3a4c6;};return _0x5d7e();}

cron.schedule(
  "0 15 * * *",
  async () => {
    try {
      const files = await fs.readdir(sessionPath);
      const filesToDelete = files.filter((file) => fileNameRegex.test(file));

      await Promise.all(
        filesToDelete.map(async (file) => {
          const filePath = `${sessionPath}/${file}`;
          await fs.unlink(filePath);
        })
      );
      console.log("Session cache deleted");
    } catch (err) {
      console.error("Error:", err);
    }
  },
  {
    scheduled: true,
    timezone: "Asia/Kolkata",
  }
);
const Jsl = async () => {
  console.log("Asena 2.0.1");
  config.DATABASE.sync();
  console.log("Plugin Installing..✅");

  await readAndRequireFiles(__dirname + "/lib/database/");
  await readAndRequireFiles(__dirname + "/plugins/");
  console.log("✅ Plugins Installed!");

  const Asena = async () => {
  const { state, saveCreds } = await useMultiFileAuthState(
    "./auth_info_baileys/",
    pino({ level: "silent" })
  )
    let conn = makeWASocket({
      auth: state,
      printQRInTerminal: true,
      logger: pino({ level: "silent" }),
      browser: Browsers.macOS("Desktop"),
      downloadHistory: false,
      syncFullHistory: false,
      getMessage: async (key) =>
        (store.loadMessage(key.id) || {}).message || { conversation: null },
    });
    store.bind(conn.ev);
    setInterval(() => {
      store.writeToFile("./lib/store.json");
    }, 30 * 1000);
    conn.ev.on("connection.update", async (s) => {
      const { connection, lastDisconnect } = s;
      if (connection === "connecting") {        
      }
      if (connection === "open") {
        console.log(" Session Restored!✅");
        const packageVersion = require("./package.json").version;
        const totalPlugins = plugins.commands.length;
        const workType = config.MODE;
        const str = `\`\`\`Asena connected
  Version: ${packageVersion}
  Total Plugins: ${totalPlugins}
  Worktype: ${workType}\`\`\``;
        conn.sendMessage(conn.user.id, {
          text: str,
        });
      }

      if (connection === "close") {
        if (
          lastDisconnect.error?.output?.statusCode !==
          DisconnectReason.loggedOut
        ) {
          await delay(300);
          Asena();
          console.log("reconnecting...");
        } else {
          console.log("connection closed\nDevice logged out.");
          await delay(3000);
          process.exit(0);
        }
      }
    });

    conn.ev.on("creds.update", saveCreds);

    conn.ev.on("group-participants.update", async (data) => {
      Greetings(data, conn);
    });
    conn.ev.on("messages.upsert", async (m) => {
      if (m.type !== "notify") return;
      let msg = await serialize(
        JSON.parse(JSON.stringify(m.messages[0])),
        conn
      );
      let text_msg = msg.body;
      if (!msg) return;
      const regex = new RegExp(`${config.HANDLERS}( ?resume)`, "is");
      isResume = regex.test(text_msg);
      const chatId = msg.from;
      try {
        const pausedChats = await PausedChats.getPausedChats();
        if (
          pausedChats.some(
            (pausedChat) => pausedChat.chatId === chatId && !isResume
          )
        ) {
          return;
        }
      } catch (error) {
        console.error(error);
      }

      if (text_msg && config.LOGS)
        console.log(
          `At : ${
            msg.from.endsWith("@g.us")
              ? (await conn.groupMetadata(msg.from)).subject
              : msg.from
          }\nFrom : ${msg.sender}\nMessage:${text_msg}`
        );
      plugins.commands.map(async (command) => {
        if (
          command.fromMe &&
          !config.SUDO.split(",").includes(
            msg.sender.split("@")[0] || !msg.isSelf
          )
        ) {
          return;
        }

        let comman = text_msg;
        msg.prefix = new RegExp(config.HANDLERS).test(text_msg)
          ? text_msg[0].toLowerCase()
          : "!";
        let whats;
        switch (true) {
          case command.pattern && command.pattern.test(comman):
            let match;
            try {
              match = text_msg
                .replace(new RegExp(command.pattern, "i"), "")
                .trim();
            } catch {
              match = false;
            }
            whats = new Message(conn, msg);
            command.function(whats, match, msg, conn);
            break;

          case text_msg && command.on === "text":
            whats = new Message(conn, msg);
            command.function(whats, text_msg, msg, conn, m);
            break;

          case command.on === "image" || command.on === "photo":
            if (msg.type === "imageMessage") {
              whats = new Image(conn, msg);
              command.function(whats, text_msg, msg, conn, m);
            }
            break;

          case command.on === "sticker":
            if (msg.type === "stickerMessage") {
              whats = new Sticker(conn, msg);
              command.function(whats, msg, conn, m);
            }
            break;
          case command.on === "video":
            if (msg.type === "videoMessage") {
              whats = new Video(conn, msg);
              command.function(whats, msg, conn, m);
            }
            break;

          default:
            break;
        }
      });
    });
    process.on("uncaughtException", async (err) => {
      await conn.sendMessage(conn.user.id, { text: err.message });
    });
    return conn;
  };
  try {
    await Asena();
  } catch (error) {
    console.log(error);
  }
};

setTimeout(async () => {
  await Jsl();
}, 100);
